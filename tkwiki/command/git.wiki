%title Git

`NOTE`:git的help信息非常好，很多可以直接help来了解

= 给git输出信息增加颜色 =
编辑`/etc/gitconfig`
比如要对git status设置颜色，可以:
{{{
[color]
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
}}}

参考: [[http://stackoverflow.com/questions/12255028/how-to-show-git-colors-on-zsh|Ref1]]
[[http://stackoverflow.com/questions/8131322/enabling-git-syntax-highlighting-for-macs-terminal|Ref2]]
[[http://nathanhoad.net/how-to-colours-in-git|Ref3]]


= 关于Git的分支 =
参考的[[http://git-scm.com/book/zh/Git-%E5%88%86%E6%94%AF-%E4%BD%95%E8%B0%93%E5%88%86%E6%94%AF|何谓分支]]

因为git是保存的快照，Git仓库有以下几个基本对象
* `blob`对象用于表示文件快照内容
* `tree`对象记录目录树内容和各个文件对应的blob对象索引
* `commit`对象记录提交信息，指向tree对象或其他commit对象

Git的分支，其本质是一个指向commit对象的可变`指针`，git使用`master`作为分支的默认名字

`HEAD`指针指向当前的分支指针

使用`git branch`是查看当前的分支列表

使用`git branch branch_name`新建分支，然后可以使用`git checkout branch_name`切换分支

最后可以用`git merge branch_name`来合并分支

如果遇到冲突，需要到冲突的文件下根据提示编辑后再commit

= 远程分支 =
参考的[[http://git-scm.com/book/zh/Git-%E5%88%86%E6%94%AF-%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF|远程分支]]

从远程git repo克隆，Git会自动将此remote repo命名为`origin`，并下载其中所有的数据，建立一个指向它的`master`分支的指针，在本地命名为`origin/master`

但无法在本地更改其数据。接着，Git建立一个属于自己的本地`master`分支，始于`origin`上`master`分支相同的位置，这样可以就此开始工作
{{{
touch README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:tankywoo/test.git
git push -u origin master
}}}
这里origin是remote repo name，branch name 是master

== 关于fetch和pull区别 ==
What is `git fetch`? and what is the difference to `git pull`?

`git fetch`是update from remote repo，但是不合并

`git pull`是fetch and merge

= Git标签 =
* 含附注的标签(annotated)
* 轻量级标签(lightweight)

[[http://git-scm.com/book/zh/Git-%E5%9F%BA%E7%A1%80-%E6%89%93%E6%A0%87%E7%AD%BE|2.6 Git 基础 - 打标签]]

= Read More =
* [[http://git-scm.com/book/zh|ProGit中文版]]
* [[http://gitref.org/|Git Reference]]

= Git 全局配置 =
全局忽略文件
* [[http://git-scm.com/book/zh/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-%E9%85%8D%E7%BD%AE-Git|Ref1]]
* [[https://github.com/GitHub/gitignore|Ref2]]


= History =
Create 2013/02/07

Last modified 2013/02/07
